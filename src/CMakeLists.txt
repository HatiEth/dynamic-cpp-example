PROJECT(App)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
AUX_SOURCE_DIRECTORY(. App_Src_List)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11") # enable c++11

OPTION(COMPILATION_USE_CCACHE "Use ccache for compilation" OFF)

IF(COMPILATION_USE_CCACHE)
    SET_PROPERTY(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)
    SET_PROPERTY(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache)
ENDIF(COMPILATION_USE_CCACHE)


SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${App_SOURCE_DIR}/cmake")
FIND_PACKAGE(SDL2 REQUIRED)
FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLM REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)

# compile preprocessor flags
add_definitions(
    #    -DGLEW_STATIC #enable glew-static build
    -DGLM_FORCE_RADIANS
)

INCLUDE_DIRECTORIES(
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${SDL2_INCLUDE_DIR}
    ${OpenGL_INCLUDE_DIR}
    ${GLM_INCLUDE_DIRS}
    ${GLEW_INCLUDE_DIRS}
    ${CMAKE_CURRENT_SOURCE_DIR}/externals
)

SET(App_HEADERS
)

SET(App_Src_List
    ${App_Src_List}
    # others
)

ADD_SUBDIRECTORY(app)

ADD_LIBRARY(${PROJECT_NAME} SHARED ${App_Src_List} ${App_HEADERS})
TARGET_LINK_LIBRARIES(
    ${PROJECT_NAME}
    ${SDL2_LIBRARY}
    ${OPENGL_LIBRARIES}
)

